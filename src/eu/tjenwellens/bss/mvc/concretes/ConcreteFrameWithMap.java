/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConcreteFrameWithMap.java
 *
 * Created on Jan 18, 2012, 1:55:50 PM
 */
package eu.tjenwellens.bss.mvc.concretes;

import java.awt.event.MouseEvent;
import java.util.Iterator;
import eu.tjenwellens.bss.GameConstants;
import eu.tjenwellens.bss.Position;
import eu.tjenwellens.bss.actionhandlers.bankAction.Transaction;
import eu.tjenwellens.bss.mvc.controller.CommandInvokerInterface;
import eu.tjenwellens.bss.mvc.model.CommandReceiverInterface;
import eu.tjenwellens.bss.commands.command.CreatePlayerCommand;
import eu.tjenwellens.bss.commands.command.DecorateCommand;
import eu.tjenwellens.bss.commands.command.EngageCommand;
import eu.tjenwellens.bss.commands.command.WalkCommand;
import eu.tjenwellens.bss.actionhandlers.decorateAction.Decoration;
import eu.tjenwellens.bss.commands.command.BankCommand;
import eu.tjenwellens.bss.commands.command.ChooseWeaponCommand;
import eu.tjenwellens.bss.commands.command.IdleCommand;
import eu.tjenwellens.bss.mvc.TickObserver;
import eu.tjenwellens.bss.mvc.view.View;
import eu.tjenwellens.bss.players.GetPlayer;
import eu.tjenwellens.bss.players.inventory.items.Material;
import eu.tjenwellens.bss.players.inventory.items.Tool;
import eu.tjenwellens.bss.players.inventory.items.ToolFactory;
import eu.tjenwellens.bss.players.inventory.items.ToolType;
import eu.tjenwellens.bss.players.inventory.items.Weapon;
import eu.tjenwellens.bss.players.inventory.items.WeaponFactory;

/**
 *
 * @author tjen
 */
public class ConcreteFrameWithMap extends javax.swing.JFrame implements TickObserver
{

    private volatile boolean active = false;
    CommandReceiverInterface cr;
    CommandInvokerInterface ci;
    int pass;
    String account;

    /** Creates new form ConcreteFrameWithMap */
    public ConcreteFrameWithMap(CommandReceiverInterface cr, View view, CommandInvokerInterface ci)
    {
        initComponents();
        mapPanel2.setView(view);
        this.cr = cr;
        this.ci = ci;
        gamePanel.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        loginPanel = new javax.swing.JPanel();
        loginInternalFrame = new javax.swing.JInternalFrame();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtCharacter = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtFactionLogin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        actionPanel = new javax.swing.JPanel();
        weaponPanel = new javax.swing.JPanel();
        txtWeapon = new javax.swing.JTextField();
        btbBuyWeapon = new javax.swing.JButton();
        btnWeaponToInventory = new javax.swing.JButton();
        btnWieldWeapon = new javax.swing.JButton();
        toolPanel = new javax.swing.JPanel();
        txtTool = new javax.swing.JTextField();
        btnBuyTool = new javax.swing.JButton();
        btnToolToInventory = new javax.swing.JButton();
        btnIdle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        mapPanel2 = new eu.tjenwellens.bss.mvc.concretes.MapPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginInternalFrame.setVisible(true);

        txtName.setText("tjen");
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Password:");

        jLabel3.setText("Character:");

        txtPassword.setText("1");
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        txtCharacter.setText("tjen");
        txtCharacter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtFactionLogin.setText("blauw");

        jLabel4.setText("Faction: ");

        javax.swing.GroupLayout loginInternalFrameLayout = new javax.swing.GroupLayout(loginInternalFrame.getContentPane());
        loginInternalFrame.getContentPane().setLayout(loginInternalFrameLayout);
        loginInternalFrameLayout.setHorizontalGroup(
            loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginInternalFrameLayout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogin))
                    .addGroup(loginInternalFrameLayout.createSequentialGroup()
                        .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFactionLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(txtCharacter, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))))
                .addContainerGap())
        );
        loginInternalFrameLayout.setVerticalGroup(
            loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFactionLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnCancel))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(loginInternalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(loginInternalFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(395, Short.MAX_VALUE))
        );

        loginPanel.setBounds(10, 10, 530, 720);
        jLayeredPane1.add(loginPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtWeapon.setText("stone");

        btbBuyWeapon.setText("BuyWeapon");
        btbBuyWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbBuyWeaponActionPerformed(evt);
            }
        });

        btnWeaponToInventory.setText("ToInventory");
        btnWeaponToInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeaponToInventoryActionPerformed(evt);
            }
        });

        btnWieldWeapon.setText("Wield");
        btnWieldWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWieldWeaponActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout weaponPanelLayout = new javax.swing.GroupLayout(weaponPanel);
        weaponPanel.setLayout(weaponPanelLayout);
        weaponPanelLayout.setHorizontalGroup(
            weaponPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weaponPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(weaponPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtWeapon, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(btnWeaponToInventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnWieldWeapon, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(btbBuyWeapon, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addContainerGap())
        );
        weaponPanelLayout.setVerticalGroup(
            weaponPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weaponPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btbBuyWeapon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWeaponToInventory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWieldWeapon)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        txtTool.setText("penseel");

        btnBuyTool.setText("BuyTool");
        btnBuyTool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyToolActionPerformed(evt);
            }
        });

        btnToolToInventory.setText("ToInventory");
        btnToolToInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToolToInventoryActionPerformed(evt);
            }
        });

        btnIdle.setText("Idle");
        btnIdle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toolPanelLayout = new javax.swing.GroupLayout(toolPanel);
        toolPanel.setLayout(toolPanelLayout);
        toolPanelLayout.setHorizontalGroup(
            toolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnToolToInventory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnBuyTool, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(txtTool, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnIdle, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        toolPanelLayout.setVerticalGroup(
            toolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuyTool)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnToolToInventory)
                .addGap(18, 18, 18)
                .addComponent(btnIdle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        javax.swing.GroupLayout actionPanelLayout = new javax.swing.GroupLayout(actionPanel);
        actionPanel.setLayout(actionPanelLayout);
        actionPanelLayout.setHorizontalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(weaponPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        actionPanelLayout.setVerticalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(weaponPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(toolPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mapPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClickOnMapPanel(evt);
            }
        });

        javax.swing.GroupLayout mapPanel2Layout = new javax.swing.GroupLayout(mapPanel2);
        mapPanel2.setLayout(mapPanel2Layout);
        mapPanel2Layout.setHorizontalGroup(
            mapPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        mapPanel2Layout.setVerticalGroup(
            mapPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(actionPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mapPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gamePanel.setBounds(10, 10, 520, 680);
        jLayeredPane1.add(gamePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        //
        txtCharacter.setText("");
        txtName.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginActionPerformed
    {//GEN-HEADEREND:event_loginActionPerformed
        // 
        String name = txtName.getText();
        String password = txtPassword.getText();
        String character = txtCharacter.getText();
        String factionName = txtFactionLogin.getText();
        if (name != null && password != null && character != null)
        {
            account = character;
            pass = Integer.parseInt(password);
            ci.addCommand(new CreatePlayerCommand(cr, pass, character, factionName, new Position(10, 10)));
            gamePanel.setVisible(true);
            active = true;
            tick();
            loginPanel.setVisible(false);
        }
    }//GEN-LAST:event_loginActionPerformed

    private void mapPanel1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_mapPanel1MouseClicked
    {//GEN-HEADEREND:event_mapPanel1MouseClicked
        // 
    }//GEN-LAST:event_mapPanel1MouseClicked

    private void mouseClickOnMapPanel(java.awt.event.MouseEvent evt)//GEN-FIRST:event_mouseClickOnMapPanel
    {//GEN-HEADEREND:event_mouseClickOnMapPanel
        // 
        int mapw = GameConstants.MAP_WIDTH;
        int maph = GameConstants.MAP_HEIGHT;
        int panelWidth = mapPanel2.getWidth();
        int panelHeight = mapPanel2.getHeight();
        double xFactor = (double) mapw / (double) panelWidth;
        double yFactor = (double) maph / (double) panelHeight;
        int x = (int) (evt.getX() * xFactor) - (GameConstants.PLAYER_RADIUS / 2);
        int y = (int) (evt.getY() * yFactor) - (GameConstants.PLAYER_RADIUS / 2);
        Position p = new Position(x, y);
        if (evt.getButton() == MouseEvent.BUTTON1)
        {// Move ya ass!
            System.out.println("Move ya ass!");
            ci.addCommand(new WalkCommand(cr, pass, p));
        } else if (evt.getButton() == MouseEvent.BUTTON3)
        {// CHAARGEEEE!!!!
            System.out.println("CHAARGEEEE!!!!");
            GetPlayer me = null;
            GetPlayer opponent = null;
            for (Iterator<GetPlayer> it = mapPanel2.players.values().iterator(); it.hasNext();)
            {
                GetPlayer getPlayer = it.next();
                if (me == null && getPlayer.getPlayerName().equalsIgnoreCase(account))
                {
                    me = getPlayer;
                } else if (opponent == null)
                {
                    Position oppPos = getPlayer.getPosition();
                    if (oppPos.distance(p) <= 20)
                    {
                        opponent = getPlayer;
                    }
                }
                if (me != null && opponent != null)
                {
                    Position myPos = me.getPosition();
                    Position opPos = opponent.getPosition();

                    if (myPos.distance(opPos) <= GameConstants.ATTACK_RANGE)
                    {
                        ci.addCommand(new EngageCommand(cr, me.getPlayerID(), opponent.getPlayerName()));
                    }

                    break;
                }
            }
        } else if (evt.getButton() == MouseEvent.BUTTON2)
        {// graffity
            System.out.println("graffity");
            if (evt.isShiftDown())
            {
                System.out.println("Build");
                ci.addCommand(new DecorateCommand(cr, pass, Decoration.BUILD, p, ToolFactory.createTool(ToolType.TRUWEEL, Material.HOUT)));
            } else if (evt.isControlDown())
            {
                System.out.println("Destroy");
                ci.addCommand(new DecorateCommand(cr, pass, Decoration.DESTROY, p, ToolFactory.createTool(ToolType.HAMER, Material.HOUT)));
            } else
            {
                System.out.println("Paint");
                ci.addCommand(new DecorateCommand(cr, pass, Decoration.PAINT, p, ToolFactory.createTool(ToolType.PENSEEL, Material.HOUT)));
            }
        }
    }//GEN-LAST:event_mouseClickOnMapPanel

    private void btbBuyWeaponActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btbBuyWeaponActionPerformed
    {//GEN-HEADEREND:event_btbBuyWeaponActionPerformed
        //
        Weapon w = WeaponFactory.createWeapon(txtWeapon.getText(), "hout");
        ci.addCommand(new BankCommand(cr, pass, Transaction.SHOP, 100, w));
    }//GEN-LAST:event_btbBuyWeaponActionPerformed

    private void btnWeaponToInventoryActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnWeaponToInventoryActionPerformed
    {//GEN-HEADEREND:event_btnWeaponToInventoryActionPerformed
        //
        Weapon w = WeaponFactory.createWeapon(txtWeapon.getText(), "hout");
        ci.addCommand(new BankCommand(cr, pass, Transaction.RETRIEVE, 0, w));
    }//GEN-LAST:event_btnWeaponToInventoryActionPerformed

    private void btnWieldWeaponActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnWieldWeaponActionPerformed
    {//GEN-HEADEREND:event_btnWieldWeaponActionPerformed
        //
        Weapon w = WeaponFactory.createWeapon(txtWeapon.getText(), "hout");
        ci.addCommand(new ChooseWeaponCommand(cr, pass, w));
    }//GEN-LAST:event_btnWieldWeaponActionPerformed

    private void btnBuyToolActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBuyToolActionPerformed
    {//GEN-HEADEREND:event_btnBuyToolActionPerformed
        //
        Tool t = ToolFactory.createTool(txtTool.getText(), "hout");
        ci.addCommand(new BankCommand(cr, pass, Transaction.SHOP, 100, t));
    }//GEN-LAST:event_btnBuyToolActionPerformed

    private void btnToolToInventoryActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnToolToInventoryActionPerformed
    {//GEN-HEADEREND:event_btnToolToInventoryActionPerformed
        //
        Tool t = ToolFactory.createTool(txtTool.getText(), "hout");
        ci.addCommand(new BankCommand(cr, pass, Transaction.RETRIEVE, 0, t));
    }//GEN-LAST:event_btnToolToInventoryActionPerformed

    private void btnIdleActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnIdleActionPerformed
    {//GEN-HEADEREND:event_btnIdleActionPerformed
        // 
        ci.addCommand(new IdleCommand(cr, pass));
    }//GEN-LAST:event_btnIdleActionPerformed
    //
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JButton btbBuyWeapon;
    private javax.swing.JButton btnBuyTool;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnIdle;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnToolToInventory;
    private javax.swing.JButton btnWeaponToInventory;
    private javax.swing.JButton btnWieldWeapon;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JInternalFrame loginInternalFrame;
    private javax.swing.JPanel loginPanel;
    private eu.tjenwellens.bss.mvc.concretes.MapPanel mapPanel2;
    private javax.swing.JTextArea output;
    private javax.swing.JPanel toolPanel;
    private javax.swing.JTextField txtCharacter;
    private javax.swing.JTextField txtFactionLogin;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtTool;
    private javax.swing.JTextField txtWeapon;
    private javax.swing.JPanel weaponPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tick()
    {
        if (active)
        {
            mapPanel2.paintComponent(mapPanel2.getGraphics());
            updateOutput();
        }
    }

    private void updateOutput()
    {
        String text = "";
        for (Iterator<GetPlayer> it = mapPanel2.players.values().iterator(); it.hasNext();)
        {
            GetPlayer getPlayer = it.next();
            char[] cs = getPlayer.toString().replace(", ", "$").toCharArray();
            String insertString = "    ";
            StringBuilder insert = new StringBuilder();
            StringBuilder reb = new StringBuilder(cs.length);
            for (char c : cs)
            {
                if (c == '{')
                {
                    insert.append(insertString);
                    reb.append('\n').append(insert);
                } else if (c == '}')
                {
                    insert.delete(insert.length() - insertString.length() + 1, insert.length()).deleteCharAt(insert.length() - 1);
                } else if (c == '$')
                {
                    reb.append('\n').append(insert);
                } else
                {
                    reb.append(c);
                }
            }
            reb.append('\n');
            text += reb;
        }
        output.setText(text);
    }
}
